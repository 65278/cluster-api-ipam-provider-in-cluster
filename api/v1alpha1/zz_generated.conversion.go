//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1alpha2 "sigs.k8s.io/cluster-api-ipam-provider-in-cluster/api/v1alpha2"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*GlobalInClusterIPPool)(nil), (*v1alpha2.GlobalInClusterIPPool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GlobalInClusterIPPool_To_v1alpha2_GlobalInClusterIPPool(a.(*GlobalInClusterIPPool), b.(*v1alpha2.GlobalInClusterIPPool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.GlobalInClusterIPPool)(nil), (*GlobalInClusterIPPool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GlobalInClusterIPPool_To_v1alpha1_GlobalInClusterIPPool(a.(*v1alpha2.GlobalInClusterIPPool), b.(*GlobalInClusterIPPool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GlobalInClusterIPPoolList)(nil), (*v1alpha2.GlobalInClusterIPPoolList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GlobalInClusterIPPoolList_To_v1alpha2_GlobalInClusterIPPoolList(a.(*GlobalInClusterIPPoolList), b.(*v1alpha2.GlobalInClusterIPPoolList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.GlobalInClusterIPPoolList)(nil), (*GlobalInClusterIPPoolList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GlobalInClusterIPPoolList_To_v1alpha1_GlobalInClusterIPPoolList(a.(*v1alpha2.GlobalInClusterIPPoolList), b.(*GlobalInClusterIPPoolList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InClusterIPPool)(nil), (*v1alpha2.InClusterIPPool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InClusterIPPool_To_v1alpha2_InClusterIPPool(a.(*InClusterIPPool), b.(*v1alpha2.InClusterIPPool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.InClusterIPPool)(nil), (*InClusterIPPool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InClusterIPPool_To_v1alpha1_InClusterIPPool(a.(*v1alpha2.InClusterIPPool), b.(*InClusterIPPool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InClusterIPPoolList)(nil), (*v1alpha2.InClusterIPPoolList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InClusterIPPoolList_To_v1alpha2_InClusterIPPoolList(a.(*InClusterIPPoolList), b.(*v1alpha2.InClusterIPPoolList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.InClusterIPPoolList)(nil), (*InClusterIPPoolList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InClusterIPPoolList_To_v1alpha1_InClusterIPPoolList(a.(*v1alpha2.InClusterIPPoolList), b.(*InClusterIPPoolList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InClusterIPPoolStatus)(nil), (*v1alpha2.InClusterIPPoolStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus(a.(*InClusterIPPoolStatus), b.(*v1alpha2.InClusterIPPoolStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.InClusterIPPoolStatus)(nil), (*InClusterIPPoolStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus(a.(*v1alpha2.InClusterIPPoolStatus), b.(*InClusterIPPoolStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InClusterIPPoolStatusIPAddresses)(nil), (*v1alpha2.InClusterIPPoolStatusIPAddresses)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InClusterIPPoolStatusIPAddresses_To_v1alpha2_InClusterIPPoolStatusIPAddresses(a.(*InClusterIPPoolStatusIPAddresses), b.(*v1alpha2.InClusterIPPoolStatusIPAddresses), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.InClusterIPPoolStatusIPAddresses)(nil), (*InClusterIPPoolStatusIPAddresses)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InClusterIPPoolStatusIPAddresses_To_v1alpha1_InClusterIPPoolStatusIPAddresses(a.(*v1alpha2.InClusterIPPoolStatusIPAddresses), b.(*InClusterIPPoolStatusIPAddresses), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*InClusterIPPoolSpec)(nil), (*v1alpha2.InClusterIPPoolSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InClusterIPPoolSpec_To_v1alpha2_InClusterIPPoolSpec(a.(*InClusterIPPoolSpec), b.(*v1alpha2.InClusterIPPoolSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.InClusterIPPoolSpec)(nil), (*InClusterIPPoolSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InClusterIPPoolSpec_To_v1alpha1_InClusterIPPoolSpec(a.(*v1alpha2.InClusterIPPoolSpec), b.(*InClusterIPPoolSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_GlobalInClusterIPPool_To_v1alpha2_GlobalInClusterIPPool(in *GlobalInClusterIPPool, out *v1alpha2.GlobalInClusterIPPool, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_InClusterIPPoolSpec_To_v1alpha2_InClusterIPPoolSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_GlobalInClusterIPPool_To_v1alpha2_GlobalInClusterIPPool is an autogenerated conversion function.
func Convert_v1alpha1_GlobalInClusterIPPool_To_v1alpha2_GlobalInClusterIPPool(in *GlobalInClusterIPPool, out *v1alpha2.GlobalInClusterIPPool, s conversion.Scope) error {
	return autoConvert_v1alpha1_GlobalInClusterIPPool_To_v1alpha2_GlobalInClusterIPPool(in, out, s)
}

func autoConvert_v1alpha2_GlobalInClusterIPPool_To_v1alpha1_GlobalInClusterIPPool(in *v1alpha2.GlobalInClusterIPPool, out *GlobalInClusterIPPool, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_InClusterIPPoolSpec_To_v1alpha1_InClusterIPPoolSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_GlobalInClusterIPPool_To_v1alpha1_GlobalInClusterIPPool is an autogenerated conversion function.
func Convert_v1alpha2_GlobalInClusterIPPool_To_v1alpha1_GlobalInClusterIPPool(in *v1alpha2.GlobalInClusterIPPool, out *GlobalInClusterIPPool, s conversion.Scope) error {
	return autoConvert_v1alpha2_GlobalInClusterIPPool_To_v1alpha1_GlobalInClusterIPPool(in, out, s)
}

func autoConvert_v1alpha1_GlobalInClusterIPPoolList_To_v1alpha2_GlobalInClusterIPPoolList(in *GlobalInClusterIPPoolList, out *v1alpha2.GlobalInClusterIPPoolList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha2.GlobalInClusterIPPool, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_GlobalInClusterIPPool_To_v1alpha2_GlobalInClusterIPPool(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_GlobalInClusterIPPoolList_To_v1alpha2_GlobalInClusterIPPoolList is an autogenerated conversion function.
func Convert_v1alpha1_GlobalInClusterIPPoolList_To_v1alpha2_GlobalInClusterIPPoolList(in *GlobalInClusterIPPoolList, out *v1alpha2.GlobalInClusterIPPoolList, s conversion.Scope) error {
	return autoConvert_v1alpha1_GlobalInClusterIPPoolList_To_v1alpha2_GlobalInClusterIPPoolList(in, out, s)
}

func autoConvert_v1alpha2_GlobalInClusterIPPoolList_To_v1alpha1_GlobalInClusterIPPoolList(in *v1alpha2.GlobalInClusterIPPoolList, out *GlobalInClusterIPPoolList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalInClusterIPPool, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_GlobalInClusterIPPool_To_v1alpha1_GlobalInClusterIPPool(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_GlobalInClusterIPPoolList_To_v1alpha1_GlobalInClusterIPPoolList is an autogenerated conversion function.
func Convert_v1alpha2_GlobalInClusterIPPoolList_To_v1alpha1_GlobalInClusterIPPoolList(in *v1alpha2.GlobalInClusterIPPoolList, out *GlobalInClusterIPPoolList, s conversion.Scope) error {
	return autoConvert_v1alpha2_GlobalInClusterIPPoolList_To_v1alpha1_GlobalInClusterIPPoolList(in, out, s)
}

func autoConvert_v1alpha1_InClusterIPPool_To_v1alpha2_InClusterIPPool(in *InClusterIPPool, out *v1alpha2.InClusterIPPool, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_InClusterIPPoolSpec_To_v1alpha2_InClusterIPPoolSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_InClusterIPPool_To_v1alpha2_InClusterIPPool is an autogenerated conversion function.
func Convert_v1alpha1_InClusterIPPool_To_v1alpha2_InClusterIPPool(in *InClusterIPPool, out *v1alpha2.InClusterIPPool, s conversion.Scope) error {
	return autoConvert_v1alpha1_InClusterIPPool_To_v1alpha2_InClusterIPPool(in, out, s)
}

func autoConvert_v1alpha2_InClusterIPPool_To_v1alpha1_InClusterIPPool(in *v1alpha2.InClusterIPPool, out *InClusterIPPool, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_InClusterIPPoolSpec_To_v1alpha1_InClusterIPPoolSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_InClusterIPPool_To_v1alpha1_InClusterIPPool is an autogenerated conversion function.
func Convert_v1alpha2_InClusterIPPool_To_v1alpha1_InClusterIPPool(in *v1alpha2.InClusterIPPool, out *InClusterIPPool, s conversion.Scope) error {
	return autoConvert_v1alpha2_InClusterIPPool_To_v1alpha1_InClusterIPPool(in, out, s)
}

func autoConvert_v1alpha1_InClusterIPPoolList_To_v1alpha2_InClusterIPPoolList(in *InClusterIPPoolList, out *v1alpha2.InClusterIPPoolList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha2.InClusterIPPool, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_InClusterIPPool_To_v1alpha2_InClusterIPPool(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_InClusterIPPoolList_To_v1alpha2_InClusterIPPoolList is an autogenerated conversion function.
func Convert_v1alpha1_InClusterIPPoolList_To_v1alpha2_InClusterIPPoolList(in *InClusterIPPoolList, out *v1alpha2.InClusterIPPoolList, s conversion.Scope) error {
	return autoConvert_v1alpha1_InClusterIPPoolList_To_v1alpha2_InClusterIPPoolList(in, out, s)
}

func autoConvert_v1alpha2_InClusterIPPoolList_To_v1alpha1_InClusterIPPoolList(in *v1alpha2.InClusterIPPoolList, out *InClusterIPPoolList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InClusterIPPool, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_InClusterIPPool_To_v1alpha1_InClusterIPPool(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_InClusterIPPoolList_To_v1alpha1_InClusterIPPoolList is an autogenerated conversion function.
func Convert_v1alpha2_InClusterIPPoolList_To_v1alpha1_InClusterIPPoolList(in *v1alpha2.InClusterIPPoolList, out *InClusterIPPoolList, s conversion.Scope) error {
	return autoConvert_v1alpha2_InClusterIPPoolList_To_v1alpha1_InClusterIPPoolList(in, out, s)
}

func autoConvert_v1alpha1_InClusterIPPoolSpec_To_v1alpha2_InClusterIPPoolSpec(in *InClusterIPPoolSpec, out *v1alpha2.InClusterIPPoolSpec, s conversion.Scope) error {
	out.Addresses = *(*[]string)(unsafe.Pointer(&in.Addresses))
	// WARNING: in.Subnet requires manual conversion: does not exist in peer-type
	// WARNING: in.First requires manual conversion: does not exist in peer-type
	// WARNING: in.Last requires manual conversion: does not exist in peer-type
	out.Prefix = in.Prefix
	out.Gateway = in.Gateway
	return nil
}

func autoConvert_v1alpha2_InClusterIPPoolSpec_To_v1alpha1_InClusterIPPoolSpec(in *v1alpha2.InClusterIPPoolSpec, out *InClusterIPPoolSpec, s conversion.Scope) error {
	out.Addresses = *(*[]string)(unsafe.Pointer(&in.Addresses))
	out.Prefix = in.Prefix
	out.Gateway = in.Gateway
	// WARNING: in.AllocateReservedIPAddresses requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus(in *InClusterIPPoolStatus, out *v1alpha2.InClusterIPPoolStatus, s conversion.Scope) error {
	out.Addresses = (*v1alpha2.InClusterIPPoolStatusIPAddresses)(unsafe.Pointer(in.Addresses))
	return nil
}

// Convert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus is an autogenerated conversion function.
func Convert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus(in *InClusterIPPoolStatus, out *v1alpha2.InClusterIPPoolStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_InClusterIPPoolStatus_To_v1alpha2_InClusterIPPoolStatus(in, out, s)
}

func autoConvert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus(in *v1alpha2.InClusterIPPoolStatus, out *InClusterIPPoolStatus, s conversion.Scope) error {
	out.Addresses = (*InClusterIPPoolStatusIPAddresses)(unsafe.Pointer(in.Addresses))
	return nil
}

// Convert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus is an autogenerated conversion function.
func Convert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus(in *v1alpha2.InClusterIPPoolStatus, out *InClusterIPPoolStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_InClusterIPPoolStatus_To_v1alpha1_InClusterIPPoolStatus(in, out, s)
}

func autoConvert_v1alpha1_InClusterIPPoolStatusIPAddresses_To_v1alpha2_InClusterIPPoolStatusIPAddresses(in *InClusterIPPoolStatusIPAddresses, out *v1alpha2.InClusterIPPoolStatusIPAddresses, s conversion.Scope) error {
	out.Total = in.Total
	out.Free = in.Free
	out.Used = in.Used
	out.OutOfRange = in.OutOfRange
	return nil
}

// Convert_v1alpha1_InClusterIPPoolStatusIPAddresses_To_v1alpha2_InClusterIPPoolStatusIPAddresses is an autogenerated conversion function.
func Convert_v1alpha1_InClusterIPPoolStatusIPAddresses_To_v1alpha2_InClusterIPPoolStatusIPAddresses(in *InClusterIPPoolStatusIPAddresses, out *v1alpha2.InClusterIPPoolStatusIPAddresses, s conversion.Scope) error {
	return autoConvert_v1alpha1_InClusterIPPoolStatusIPAddresses_To_v1alpha2_InClusterIPPoolStatusIPAddresses(in, out, s)
}

func autoConvert_v1alpha2_InClusterIPPoolStatusIPAddresses_To_v1alpha1_InClusterIPPoolStatusIPAddresses(in *v1alpha2.InClusterIPPoolStatusIPAddresses, out *InClusterIPPoolStatusIPAddresses, s conversion.Scope) error {
	out.Total = in.Total
	out.Free = in.Free
	out.Used = in.Used
	out.OutOfRange = in.OutOfRange
	return nil
}

// Convert_v1alpha2_InClusterIPPoolStatusIPAddresses_To_v1alpha1_InClusterIPPoolStatusIPAddresses is an autogenerated conversion function.
func Convert_v1alpha2_InClusterIPPoolStatusIPAddresses_To_v1alpha1_InClusterIPPoolStatusIPAddresses(in *v1alpha2.InClusterIPPoolStatusIPAddresses, out *InClusterIPPoolStatusIPAddresses, s conversion.Scope) error {
	return autoConvert_v1alpha2_InClusterIPPoolStatusIPAddresses_To_v1alpha1_InClusterIPPoolStatusIPAddresses(in, out, s)
}
